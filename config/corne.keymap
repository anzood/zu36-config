/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF     0
#define SYM     1
#define NAV     2
#define NUM     3
#define FN      4
#define ADJ     5
#define GAME_DEF        6
#define GAME_RIGHT      7
#define GAME_NUM        8

&mt {
    flavor = "hold-preferred";
    quick-tap-ms = <200>;
};

&lt {
    flavor = "hold-preferred";
    quick-tap-ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <SYM NAV>;
            then-layer = <ADJ>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_win_l {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LGUI>;
            layers = <DEF>;
        };

        combo_win_r {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp RGUI>;
            layers = <DEF>;
        };

        combo_alt_l {
            bindings = <&kp LEFT_ALT>;
            key-positions = <16 13>;
        };

        combo_ralt {
            bindings = <&kp RALT>;
            key-positions = <19 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = " DEFAULT";

            // -----------------------------------------------------------------------------------------
            // | LGUI/` |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   |
            // | ALT    |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT   |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  ]   |
            //                | BSP/SHFT | TAB/NUM | ESC/CTRL |     | ENT/SYM | SPACE/NAV  | DEL/FN |

            bindings = <
&none  &kp Q  &kp W         &kp E          &kp R          &kp T          &kp Y          &kp U       &kp I    &kp O     &kp P  &none
&kp Q  &kp A  &kp S         &kp D          &kp F          &kp G          &kp H          &kp J       &kp K    &kp L  &kp SEMI  &kp P
&none  &kp Z  &kp X         &kp C          &kp V          &kp B          &kp N          &kp M   &kp COMMA  &kp DOT  &kp FSLH  &none
                     &lt NUM BSPC  &mt LSHFT TAB  &mt LCTRL ESC    &lt SYM RET  &lt NAV SPACE  &lt FN DEL
            >;
        };

        symbol_layer {
            label = " SYMBOLS";
            bindings = <
    &none  &kp GRAVE     &kp AT  &kp LBKT   &kp RBKT  &kp CARET             &kp DLLR     &none          &none      &none             &kp TILDE      &none
&kp GRAVE  &kp MINUS  &kp EQUAL  &kp LPAR   &kp RPAR   &kp STAR    &kp DOUBLE_QUOTES  &kp HASH  &kp BACKSLASH  &kp COLON        &kp APOSTROPHE  &kp TILDE
    &none   &kp PLUS   &kp AMPS  &kp LBRC   &kp RBRC  &kp UNDER          &kp PERCENT  &kp EXCL       &kp PIPE  &kp PIPE2  &kp NON_US_BACKSLASH      &none
                                   &trans  &kp LSHFT    &kp ESC               &trans    &trans         &trans
            >;
        };

        navigation_layer {
            label = " NAV";
            bindings = <
    &none  &kp K_APP  &kp PG_UP  &kp LG(GRAVE)   &kp HOME      &kp PSCRN    &kp LA(LS(N6))     &kp LA(F1)  &kp LA(F2)     &kp LA(F4)          &none  &none
&kp K_APP    &kp INS   &kp LEFT         &kp UP  &kp RIGHT  &kp LG(SPACE)    &kp LA(LS(N8))      &kp RCTRL    &kp LALT      &kp RSHFT       &kp RGUI  &none
    &none    &kp DEL  &kp PG_DN       &kp DOWN    &kp END        &kp ESC    &kp LA(LS(N4))  &kp LC(PG_UP)    &kp RALT  &kp LC(PG_DN)  &kp LA(SPACE)  &none
                                      &kp BSPC    &kp TAB        &kp RET            &trans         &trans      &trans
            >;
        };

        number_layer {
            label = " NUMBERS";
            bindings = <
&none          &none  &kp LC(LS(TAB))  &kp LG(GRAVE)    &kp LC(TAB)  &kp LA(LS(N6))       &kp KP_SLASH     &kp N7  &kp N8  &kp N9  &kp KP_MINUS         &none
&none       &kp LGUI        &kp LSHFT       &kp LALT      &kp LCTRL  &kp LA(LS(N8))    &kp KP_MULTIPLY     &kp N4  &kp N5  &kp N6   &kp KP_PLUS  &kp KP_MINUS
&none  &kp LA(SPACE)    &kp LC(PG_UP)       &kp RALT  &kp LC(PG_DN)  &kp LA(LS(N4))         &kp KP_DOT     &kp N1  &kp N2  &kp N3       &kp DOT         &none
                                              &trans         &trans          &trans       &kp KP_ENTER  &kp COMMA  &kp N0
            >;
        };

        fn_layer {
            label = " FN KEYS";
            bindings = <
 &none  &kp F1   &kp F2    &kp F3   &kp F4      &kp LG(LC(D))                &none            &none     &none  &kp LG(LC(F4))     &none  &none
&kp F1  &kp F5   &kp F6    &kp F7   &kp F8   &kp LG(LC(LEFT))    &kp LG(LC(RIGHT))        &kp RCTRL  &kp LALT       &kp RSHFT  &kp RGUI  &none
 &none  &kp F9  &kp F10   &kp F11  &kp F12  &kp LG(LC(RIGHT))                &none  &kp PAUSE_BREAK  &kp SLCK      &kp KP_NUM  &kp CAPS  &none
                         &kp BSPC  &kp TAB            &kp ESC               &trans           &trans    &trans
            >;
        };

        adjust_layer {
            label = " ADJUST";
            bindings = <
     &none    &kp C_MUTE         &none         &none         &none  &kp C_VOL_UP    &to GAME_DEF   &none   &none  &none  &none  &none
&kp C_MUTE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &bt BT_CLR   &none   &none  &none  &none  &none
     &none    &kp C_STOP      &kp C_PP    &kp C_PREV    &kp C_NEXT  &kp C_VOL_DN           &none   &none   &none  &none  &none  &none
                                              &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        // GAME layers

        game_default_layer {
            label = " GAME";
            bindings = <
&kp TAB      &kp Q  &kp C           &kp E      &kp R         &kp T     &none   &none   &none  &none  &none  &to DEF
  &kp G  &kp LSHFT  &kp A           &kp W      &kp D         &kp F     &none   &none   &none  &none  &none    &none
  &kp Z  &kp LCTRL  &kp X           &kp S      &kp V         &kp B     &none   &none   &none  &none  &none    &none
                           &mo GAME_RIGHT  &kp SPACE  &mo GAME_NUM    &trans  &trans  &trans
            >;
        };

        game_right_layer {
            label = " GAME R";
            bindings = <
&kp LBKT     &kp P    &kp O      &kp I   &kp U   &kp Y     &none   &none   &none  &none  &none  &none
 &kp SQT  &kp SEMI    &kp L      &kp K   &kp J   &kp H     &none   &none   &none  &none  &none  &none
&kp RBKT  &kp FSLH  &kp DOT  &kp COMMA   &kp M   &kp N     &none   &none   &none  &none  &none  &none
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        game_num_layer {
            label = " GAME N";
            bindings = <
 &kp F6  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5     &none   &none   &none  &none  &none  &none
&kp ESC  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &none   &none   &none  &none  &none  &none
 &kp F7  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0     &none   &none   &none  &none  &none  &none
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
